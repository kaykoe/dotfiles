. ~/.zshenv # this is just env vars

# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=10000
HISTFILESIZE=100000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

shopt -s globstar

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
	debian_chroot=$(cat /etc/debian_chroot)
fi

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
	test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
	alias ls='ls --color=auto'
	#alias dir='dir --color=auto'
	#alias vdir='vdir --color=auto'

	alias grep='grep --color=auto'
	alias fgrep='fgrep --color=auto'
	alias egrep='egrep --color=auto'
fi

# colored GCC warnings and errors
#export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
	if [ -f /usr/share/bash-completion/bash_completion ]; then
		. /usr/share/bash-completion/bash_completion
	elif [ -f /etc/bash_completion ]; then
		. /etc/bash_completion
	fi
fi

# -----------------------------------------------------
# Prompt
# -----------------------------------------------------

eval "$(starship init bash)"

# -----------------------------------------------------
# completions
# -----------------------------------------------------

function on_path {
	builtin type -P "$1" &>/dev/null
}

compdir=~/.bash_completions
[[ -d $compdir ]] || mkdir -p "$compdir"

[[ -f $compdir/uv.bash ]] || { on_path "uv" && uv generate-shell-completion bash >"$compdir/uv.bash"; }
[[ -f $compdir/uvx.bash ]] || { on_path "uvx" && uvx --generate-shell-completion bash >"$compdir/uvx.bash"; }
[[ -f $compdir/pnpm.bash ]] || pnpm completion bash >"$compdir/pnpm.bash"
[[ -f $compdir/rg.bash ]] || rg --generate complete-bash >"$compdir/rg.bash"
[[ -f $compdir/rip.bash ]] || rip completions bash >"$compdir/rip.bash"
[[ -f $compdir/rustup.bash ]] || rustup completions bash >"$compdir/rustup.bash"
[[ -f $compdir/cargo.bash ]] || rustup completions bash cargo >"$compdir/cargo.bash"
[[ -f $compdir/chezmoi.bash ]] || chezmoi completion bash >"$compdir/chezmoi.bash"
[[ -f $compdir/starship.bash ]] || starship completions bash >"$compdir/starship.bash"

for file in "$compdir"/*; do
	. "$file"
done

{{- if .hasGUI }}
source "/home/kaykoe/.local/share/bash-completion/completions/am"
{{ end }}

complete -F _longopt fzf
complete -F _longopt fd
# if I try to put this in a file it gets overwritten by the other delta's completions
source <(delta --generate-completion bash)
# if I try to put this in a file the keybindings don't work
source <(fzf --bash)

# -----------------------------------------------------
# functions
# -----------------------------------------------------

BASHFUNCDIR=~/.bash_functions
for file in $BASHFUNCDIR/*; do
	. $file
done

# -----------------------------------------------------
# Set-up FZF key bindings (CTRL R for fuzzy history finder)
# -----------------------------------------------------

export FZF_DEFAULT_OPTS='--bind "ctrl-y:accept" --tmux 40% --min-height 5+ --layout reverse --info=inline-right'

show_file_or_dir_preview="if [ -d {} ]; then eza --tree --color=always {} | head -200; else bat -n --color=always --line-range :500 {}; fi"

export FZF_CTRL_T_OPTS="--preview '$show_file_or_dir_preview'"
export FZF_ALT_C_OPTS="--preview 'eza --tree --color=always {} | head -200'"

# Advanced customization of fzf options via _fzf_comprun function
# - The first argument to the function is the name of the command.
# - You should make sure to pass the rest of the arguments to fzf.
_fzf_comprun() {
	local command=$1
	shift

	case "$command" in
	cd) fzf --preview 'eza -A --tree --color=always {} | head -200' "$@" ;;
	__zoxide_z) fzf --preview 'eza -A --tree --color=always {} | head -200' "$@" ;;
	export | unset) fzf --preview "eval 'echo $'{}" "$@" ;;
	ssh) fzf --preview 'dig {}' "$@" ;;
	*) fzf --preview "bat -n --color=always --line-range :500 {}" "$@" ;;
	esac
}

# vi mode
set -o vi

bind -m vi '" e":edit-and-execute-command'
bind -m vi-insert '"\C-l":clear-screen'
bind -m vi-insert '"\C-p":previous-history'
bind -m vi-insert '"\C-n":next-history'

# completion
bind 'set completion-ignore-case on'

# -----------------------------------------------------
# Aliases
# -----------------------------------------------------

alias reload='. ~/.bashrc'

alias l='eza --color=always --git --grid --no-filesize --icons=always --no-time --no-user --no-permissions'
alias la='eza --color=always --git --grid --no-filesize --icons=always --no-time --no-user --no-permissions --all'
alias ll='eza --color=always --git --long --all --icons=always'
alias lt='eza --color=always --long --git --no-filesize --icons=always --no-time --no-user --no-permissions --all --tree --level=3'

alias cp='cp -i'
alias mv='mv -i'
alias mkdir='mkdir -p'
alias rg='rg -S'

{{- if .yazi }}
#----------------------------------------------------------------------------------------------------------------------------------------
# yazi
#----------------------------------------------------------------------------------------------------------------------------------------

function y() {
	local tmp="$(mktemp -t "yazi-cwd.XXXXXX")" cwd
	yazi "$@" --cwd-file="$tmp"
	if cwd="$(command cat -- "$tmp")" && [ -n "$cwd" ] && [ "$cwd" != "$PWD" ]; then
		builtin cd -- "$cwd"
	fi
	rm -f -- "$tmp"
}
{{ end }}

# -----------------------------------------------------
# THIS NEEDS TO BE AT THE END, DO NOT MOVE THIS
# -----------------------------------------------------

eval "$(zoxide init bash)"

{{ if .tmux }}
# -----------------------------------------------------
# tmux
# -----------------------------------------------------

alias connect='sesh connect "home "'

if [[ -z "$TMUX" && -z "$VIM" ]]; then
	if [[ "$BASH_TMUX_AUTOSTARTED" != "true" ]]; then
		export BASH_TMUX_AUTOSTARTED=true
		eval "$(ssh-agent -s)"
		ssh-add ~/.ssh/kaykoe+2025@asus_tumbleweed
		{{ if .isWSL }}
		wallust theme monokai
		{{ end }}
		sesh connect "home "
	fi
fi
{{ end }}
